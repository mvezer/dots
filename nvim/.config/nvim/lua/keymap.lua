-- FzfLua
local FzfLua = require("fzf-lua")
vim.keymap.set("n", "<leader>sd", function()
  FzfLua.diagnostics_document()
end)
vim.keymap.set("n", "<leader>sr", function()
  FzfLua.oldfiles()
end)
vim.keymap.set("n", "<leader>sf", function()
  FzfLua.files()
end)
vim.keymap.set("n", "<leader>st", function()
  FzfLua.live_grep()
end)
vim.keymap.set("n", "<leader>sz", function()
  FzfLua.zoxide()
end)
vim.keymap.set("n", "<leader>sw", function()
  FzfLua.grep_cWORD()
end)
vim.keymap.set("n", "<leader>sh", function()
  FzfLua.helptags()
end)
vim.keymap.set("n", "<leader>sj", function()
  FzfLua.jumps()
end)
vim.keymap.set("n", "<leader>e", ":Neotree toggle float<CR>", { silent = true })
vim.keymap.set("n", "<leader>E", ":NeoTreeFloatCurrentDir<CR>", { silent = true })
vim.keymap.set({ "n", "v", "i" }, "<C-x>", ":bd<CR>", { silent = true })

-- editing
vim.keymap.set("v", "<", "<gv")
vim.keymap.set("v", ">", ">gv")
vim.keymap.set("v", "<S-down>", ":m '>+1<CR>gv=gv")
vim.keymap.set("v", "<S-up>", ":m '<-2<CR>gv=gv")
vim.keymap.set("v", "<S-left>", "<gv")
vim.keymap.set("v", "<S-right>", ">gv")
vim.keymap.set({ "n", "v" }, "c", '"_c')
vim.keymap.set({ "n", "v" }, "C", '"_C')
vim.keymap.set("v", "p", "P")
vim.keymap.set("n", "<leader>F", function()
  require("conform").format()
end)
vim.keymap.set("n", "<leader>f", "<cmd>ConformToggle<CR>", { desc = "Toggle autoformatting", silent = true })

-- windows
vim.keymap.set({ "n", "v", "i" }, "<c-v>", ":vsplit<CR>")
vim.keymap.set({ "n", "v", "i" }, "<c-down>", ":NavigatorDown<CR>")
vim.keymap.set({ "n", "v", "i" }, "<c-up>", ":NavigatorUp<CR>")
vim.keymap.set({ "n", "v", "i" }, "<c-right>", ":NavigatorRight<CR>")
vim.keymap.set({ "n", "v", "i" }, "<c-left>", ":NavigatorLeft<CR>")

vim.keymap.set("n", "<leader>bo", ":%bd|e#|bd#<CR>", { silent = true }) -- close all buffers but the current one
vim.keymap.set({ "n", "v", "i" }, "<C-x>", ":bd<CR>", { silent = true })
vim.keymap.set("n", "<leader>by", ":%y<CR>")
vim.keymap.set("n", "<leader>bY", ":let @+ = expand('%:p')", { silent = true })
vim.keymap.set("n", "<S-Tab>", ":bprevious<CR>", { silent = true })
vim.keymap.set("n", "<Tab>", ":bnext<CR>", { silent = true })
vim.keymap.set("n", "<C-S-Tab>", ":bprevious<CR>", { silent = true })
vim.keymap.set("n", "<Esc>", ":noh<CR>", { silent = true })

vim.keymap.set("n", "<leader>gg", ":LazyGit<CR>")

vim.keymap.set("n", "j", "gj")
vim.keymap.set("n", "<Down>", "gj")
vim.keymap.set("n", "k", "gk")
vim.keymap.set("n", "<Up>", "gk")
vim.keymap.set("n", "<leader>m", ":TSJToggle<CR>", { silent = true })

-- notes
vim.keymap.set("n", "<leader>nn", function()
  vim.cmd("ZkSetDefaultModeOrCurrent")
  vim.cmd("ZkNewWithTitle")
end, { silent = true })
vim.keymap.set("n", "<leader>ns", function()
  vim.cmd("ZkSetDefaultModeOrCurrent")
  require("zk.commands").get("ZkNotes")({ excludeHrefs = { "dailies" } })
end, { silent = true })
vim.keymap.set("n", "<leader>nd", function()
  vim.cmd("ZkSetDefaultModeOrCurrent")
  require("zk.commands").get("ZkNotes")({ tags = { "daily" } })
end, { silent = true })
vim.keymap.set("n", "<leader>nt", function()
  vim.cmd("ZkSetDefaultModeOrCurrent")
  require("zk.commands").get("today")
end, { silent = true })

-- toggleterm
-- vim.keymap.set({ "n", "i" }, "<c-t>", "<CMD>ToggleTerm direction=float dir=%:p:h<CR>",
-- { silent = true, desc = "Open terminal in a floating window" })
-- vim.keymap.set({ "t" }, "<c-t>", "<CMD>ToggleTerm<CR>", { silent = true, desc = "Closes the terminal" })
-- vim.keymap.set({ "t" }, "<esc>", "<C-\\><C-n>", {
--   silent = true,
--   desc =
--   "Enters proper normal mode in the terminal buffer"
-- })
